---
- name: install-microk8s
  hosts: all
  vars: 
    microk8s_version: "1.19"
  tasks:
  - name: Update apt cache
    raw: apt-get -y update

  - name: Install base dependencies
    apt: 
      name: 
        - snapd
      state: present 
    become: yes

  - name: Check is ufw installed
    shell: command -v ufw >/dev/null 2>&1
    register: is_ufw_exist
    ignore_errors: yes

  - name: Disabling ufw
    command: ufw disable
    become: yes
    when: is_ufw_exist.rc == 0

  - name: Set ip forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      sysctl_set: yes

  - name: Disable Swap
    command: swapoff -a

  - name: Install microk8s
    become: yes
    snap:
      name: microk8s
      classic: yes
      channel: "{{ microk8s_version }}"

  - name: add public ip to microk8s
    lineinfile:
      path: /var/snap/microk8s/current/certs/csr.conf.template
      insertafter: '^IP.\d+ = '
      line: 'IP.10 = {{ inventory_hostname }}'

  - name: Microk8s status
    shell: source /etc/profile.d/apps-bin-path.sh && microk8s.status --wait-ready
    args:
      executable: /bin/bash

  - name: Stop Microk8s
    shell: source /etc/profile.d/apps-bin-path.sh && microk8s.stop
    args:
      executable: /bin/bash

  - name: Start Microk8s
    shell: source /etc/profile.d/apps-bin-path.sh && microk8s.start
    args:
      executable: /bin/bash

  - name: Microk8s status
    shell: source /etc/profile.d/apps-bin-path.sh && microk8s.status --wait-ready
    args:
      executable: /bin/bash

  - name: Microk8s inspect
    shell: source /etc/profile.d/apps-bin-path.sh && microk8s.inspect
    args:
      executable: /bin/bash

  - name: Alias kubectl
    shell: "source /etc/profile.d/apps-bin-path.sh && snap alias microk8s.kubectl kubectl"
    args:
      executable: /bin/bash

  - name: Enable dns
    shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable dns"
    args:
      executable: /bin/bash

  - name: Enable ingress
    shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable ingress"
    args:
      executable: /bin/bash

  - name: Enable storage
    shell: "source /etc/profile.d/apps-bin-path.sh && microk8s.enable storage"
    args:
      executable: /bin/bash

  - name: Enable K8s Dashboard
    shell: "source /etc/profile.d/apps-bin-path.sh && /snap/bin/microk8s.enable dashboard"
    args:
      executable: /bin/bash

  - name: Add adminuser to microk8s
    become: yes
    shell: usermod -a -G microk8s adminuser && chown -f -R adminuser ~/.kube

  - name: get kubeconfig
    become: yes
    shell: microk8s config
    register: kubeconfig

  - name: save kubeconfig
    local_action: copy content={{ kubeconfig.stdout }} dest=kubeconfig
